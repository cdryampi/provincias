"""
Django settings for provincias project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ
from django.core.exceptions import ImproperlyConfigured
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!


# SECURITY WARNING: keep the secret key used in production secret!
# Cargar las variables desde el archivo .env
load_dotenv()

# Configuración de DEBUG
DEBUG = os.getenv('DEBUG', 'True').lower() in ['true', '1', 'yes']

# Configuración de SECRET_KEY
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-desarrollo')

# Configuración de URL del servidor
URL_SERVER = os.getenv('URL_SERVER', 'http://localhost:8000')

# Validación de SECRET_KEY en producción
if not SECRET_KEY:
    raise ImproperlyConfigured(
        "La clave secreta no está configurada correctamente. "
        "Asegúrate de que DJANGO_SECRET_KEY esté configurada en las variables de entorno o en el archivo .env."
    )

if SECRET_KEY == 'django-insecure-desarrollo' and not DEBUG:
    raise ImproperlyConfigured(
        "Estás usando una clave insegura en producción. "
        "Cambia DJANGO_SECRET_KEY a una clave secreta segura."
    )


ALLOWED_HOSTS = ['.railway.app', '127.0.0.1', 'localhost', URL_SERVER]

CSRF_TRUSTED_ORIGINS = [
    URL_SERVER,  # Tu dominio en Railway
]
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'comunidades_autonomas',
    'core',
    'multimedia_manager',
    'drf_yasg',
]
# añadir la app de cors a las aplicaciones instaladas
INSTALLED_APPS += ['corsheaders']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# añaadir el middleware de cors a la lista de middlewares
MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + MIDDLEWARE

ROOT_URLCONF = 'provincias.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'provincias.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# permitir acceso a todos los endpoints de la API
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Permitir acceso público a todos los endpoints (cambiar en producción)
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ]
}

# cors
CORS_ALLOW_ALL_ORIGINS = True
